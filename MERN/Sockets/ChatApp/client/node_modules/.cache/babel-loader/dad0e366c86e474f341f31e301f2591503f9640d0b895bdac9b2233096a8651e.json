{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\di1\\\\Documents\\\\GitHub\\\\Training-Axsos\\\\MERN\\\\Sockets\\\\ChatApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('new_message_from_server', msg => {\n      setMessages(prevMessages => [msg, ...prevMessages]);\n    });\n    return () => {\n      socket.off('new_message_from_server');\n    };\n  }, []);\n  const sendMessage = () => {\n    socket.emit('message', messages);\n    setMessages('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Socket.io Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: messages,\n      onChange: e => setMessages(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","on","msg","prevMessages","off","sendMessage","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/di1/Documents/GitHub/Training-Axsos/MERN/Sockets/ChatApp/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000');\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket.on('new_message_from_server', (msg) => {\n            setMessages((prevMessages) => [msg, ...prevMessages]);\n        });\n\n        return () => {\n            socket.off('new_message_from_server');\n        };\n    }, []);\n\n    const sendMessage = () => {\n        socket.emit('message', messages);\n        setMessages('');\n    };\n\n    return (\n        <div>\n            <h1>Socket.io Chat</h1>\n            <div>\n                {messages.map((msg, index) => (\n                    <p key={index}>{msg}</p>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={messages}\n                onChange={(e) => setMessages(e.target.value)}\n                placeholder=\"Type a message...\"\n            />\n            <button onClick={sendMessage}>Send</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZK,MAAM,CAACK,EAAE,CAAC,yBAAyB,EAAGC,GAAG,IAAK;MAC1CF,WAAW,CAAEG,YAAY,IAAK,CAACD,GAAG,EAAE,GAAGC,YAAY,CAAC,CAAC;IACzD,CAAC,CAAC;IAEF,OAAO,MAAM;MACTP,MAAM,CAACQ,GAAG,CAAC,yBAAyB,CAAC;IACzC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBT,MAAM,CAACU,IAAI,CAAC,SAAS,EAAEP,QAAQ,CAAC;IAChCC,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACIL,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAAY,QAAA,EACKR,QAAQ,CAACa,GAAG,CAAC,CAACV,GAAG,EAAEW,KAAK,kBACrBlB,OAAA;QAAAY,QAAA,EAAgBL;MAAG,GAAXW,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNhB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAAmB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFhB,OAAA;MAAQyB,OAAO,EAAEf,WAAY;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACb,EAAA,CAnCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}